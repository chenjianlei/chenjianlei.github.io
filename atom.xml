<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Ferry House (摆渡屋)</title>
  
  <subtitle>记录成长过程</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-04-09T17:00:00.523Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>陈建蕾</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Python学习之路</title>
    <link href="http://yoursite.com/2018/04/09/Python%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF/"/>
    <id>http://yoursite.com/2018/04/09/Python学习之路/</id>
    <published>2018-04-08T16:40:13.853Z</published>
    <updated>2018-04-09T17:00:00.523Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>目前正在自学<code>Python</code>语言，这里面记录一些学习的疑惑与认识。</p><h3 id="困惑"><a href="#困惑" class="headerlink" title="困惑"></a>困惑</h3><ul><li>怎么依赖第三包？</li><li>怎么升级本地<code>Python</code>环境？</li><li><code>pip</code>如何在2.0和3.0环境中的使用？</li></ul><h3 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h3><h4 id="怎么依赖第三包？"><a href="#怎么依赖第三包？" class="headerlink" title="怎么依赖第三包？"></a>怎么依赖第三包？</h4><p><code>Python</code>应该有一个针对自己平台完美的工具去管理，在<code>mac</code>上终端是最好的操作工具，那么我就需要去给<code>mac</code>终端配置环境，来完美的支持<code>Python</code>代码管理，最终通过<a href="http://ju.outofmemory.cn/entry/106476" target="_blank" rel="noopener">Pip</a>这篇文章解决了我困惑。</p><h4 id="怎么升级本地Python环境？"><a href="#怎么升级本地Python环境？" class="headerlink" title="怎么升级本地Python环境？"></a>怎么升级本地<code>Python</code>环境？</h4><p>查阅资料，了解到<code>mac</code>电脑自带了<code>Python2.0</code>环境，这也解决了我最初为什么只安装了<code>PyCharm</code>工具之后就可以编写<code>Python</code>程序的疑惑。</p><h5 id="本地环境升级要去做？是直接删除本地环境还是在本地环境之上更新呢？"><a href="#本地环境升级要去做？是直接删除本地环境还是在本地环境之上更新呢？" class="headerlink" title="本地环境升级要去做？是直接删除本地环境还是在本地环境之上更新呢？"></a>本地环境升级要去做？是直接删除本地环境还是在本地环境之上更新呢？</h5><p>最初在学习终端的时候，由于基础知识薄弱，最终的结果是电脑不得已重新装系统。我想这次可能面临的也是重装系统的老路子吧。。。反正没有什么是重装系统解决不了的，如果有，那就换电脑即可。不过我在下手操作之前，还是在网上查找了一些资料来查看，找一个最委托的办法来解决本地环境升级。通过网上的资料得出结论，2.0环境与我要升级的3.0环境可以共存，系统自带的环境最好不要随意更改，只要我在使用<code>PyCharm</code>软件的时候改变引用环境即可。</p><p>在安装3.0环境的时候，涉及到一些权限的问题，网上的资料有许多，稍加细心一点，也可以完美的解决。</p><h5 id="怎么验证已经安装了3-0环境？"><a href="#怎么验证已经安装了3-0环境？" class="headerlink" title="怎么验证已经安装了3.0环境？"></a>怎么验证已经安装了3.0环境？</h5><p>终端输入<code>python</code>,默认是2.0<br><img src="/uploads/source/python2.png" alt="python2.png"><br>终端输入<code>python3</code>，这个命令下面就是3.0的环境啦<br><img src="/uploads/source/python3.png" alt="python3.png"></p><h4 id="pip如何在2-0和3-0环境中的使用？"><a href="#pip如何在2-0和3-0环境中的使用？" class="headerlink" title="pip如何在2.0和3.0环境中的使用？"></a><code>pip</code>如何在2.0和3.0环境中的使用？</h4><p>这个问题花费了我两个晚上的时间终于搞定了！最初我是使用<code>Homebrew</code>直接安装<code>Python3.6</code>的环境，程序没有帮我自动下载<code>pip3</code>（可能是下载到了2.7环境包中，与pip重名）,我在终端中怎么使用<code>which pip3</code>都是无反应，本想通过<code>pip</code>安装七牛的<code>python包</code>，可<code>pip</code>默认安装的是在2.7环境中，我想把它安装在3.6的环境中，因为没有<code>pip3</code>，所以终端执行<code>pip3 install qiniu</code>也没有任何作用，网上资料找了一大堆，也没能解决，无奈之下，我把<code>Python3.6</code>卸载，打算在重新装一次。</p><p>再次安装的过程中，发现了<code>pyenv</code>,然后我通过<code>Homebrew</code>先安装了<code>pyenv</code>，然后根据教程，选择安装的<code>Python</code>版本。当我安装完成后，发现终端运行<code>Python</code>还是2.7的版本。后来发现是因为自己没有切换到全局<code>Python</code>版本。</p><p>安装好之后终端运行<code>python</code>也正常了，执行了<code>pip3 install qiniu</code>也成功安装，新建了一个工程，重新选择了引用包，也可以成功导入qiniu模块了，如果要切换到系统自带<code>Python</code>版本，只要执行<code>pyenv local system</code>即可，<code>pyenv local x.x.x</code>将当前目录下的Python切换为指定版本。</p><p>参考文章：<br><a href="https://www.cnblogs.com/caiyutong/p/6384832.html" target="_blank" rel="noopener">https://www.cnblogs.com/caiyutong/p/6384832.html</a></p><p>文章会持续更新，记录自己的<code>Python</code>学习历程<br>我的博客 <a href="https://chenjianlei.github.io/" target="_blank" rel="noopener">摆渡屋</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;目前正在自学&lt;code&gt;Python&lt;/code&gt;语言，这里面记录一些学习的疑惑与认识。&lt;/p&gt;
&lt;h3 id=&quot;困惑&quot;&gt;&lt;a href=&quot;
      
    
    </summary>
    
      <category term="Python" scheme="http://yoursite.com/categories/Python/"/>
    
    
  </entry>
  
  <entry>
    <title>策略模式在播放器调试中的运用</title>
    <link href="http://yoursite.com/2018/04/06/%E7%AD%96%E7%95%A5%E6%A8%A1%E5%BC%8F%E5%9C%A8%E6%92%AD%E6%94%BE%E5%99%A8%E8%B0%83%E8%AF%95%E4%B8%AD%E7%9A%84%E8%BF%90%E7%94%A8/"/>
    <id>http://yoursite.com/2018/04/06/策略模式在播放器调试中的运用/</id>
    <published>2018-04-06T03:32:57.953Z</published>
    <updated>2018-04-06T14:21:30.932Z</updated>
    
    <content type="html"><![CDATA[<p>需求：最近在视频播放中，遇到了播放器来回切换调试的问题，那么接下来，会介绍一下怎么做才会使代码更加适用于业务且改动较小的方案。</p><h3 id="场景一"><a href="#场景一" class="headerlink" title="场景一"></a>场景一</h3><ul><li>只有腾讯播放SDK<h4 id="方案一"><a href="#方案一" class="headerlink" title="方案一"></a>方案一</h4>直接在<code>ViewController</code>初始化<code>TencentSDK</code>，并实现对应的<code>播放</code>、<code>暂停</code>、<code>停止</code>、<code>重置</code>等功能。</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">- (void)viewDidLoad &#123;</span><br><span class="line">    [super viewDidLoad];</span><br><span class="line">    self.tencentSDK = [TencentSDK new];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (void)onActionPlay:(id)sender &#123;</span><br><span class="line">    [self.tencentSDK play];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (void)onActionPause:(id)sender &#123;</span><br><span class="line">    [self.tencentSDK pause];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (void)onActionStop:(id)sender &#123;</span><br><span class="line">    [self.tencentSDK stop];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (void)onActionResume:(id)sender &#123;</span><br><span class="line">    [self.tencentSDK resume];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这种使用方式是我刚进入职场使用的一种傻瓜式方案，开发快速，简单明了，适用于一次性开发，确定播放类型，且后期不会再改动的代码。</p><h3 id="场景二"><a href="#场景二" class="headerlink" title="场景二"></a>场景二</h3><ul><li>腾讯播放SDK</li><li>新浪播放SDK</li><li>最开始使用腾讯SDK，后面由于业务需求，接入新浪SDK</li></ul><h4 id="方案一-1"><a href="#方案一-1" class="headerlink" title="方案一"></a>方案一</h4><p><code>ViewController</code>里面初始化<code>TencentSDK</code>。因为业务更改，<code>ViewController</code>里面初始化<code>SinaSDK</code>,在原来的业务逻辑里面替换代码。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">- (void)viewDidLoad &#123;</span><br><span class="line">    [super viewDidLoad];</span><br><span class="line">//    self.tencentSDK = [TencentSDK new];</span><br><span class="line">    self.sinaSDK = [SinaSDK new];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (void)onActionPlay:(id)sender &#123;</span><br><span class="line">//    [self.tencentSDK play];</span><br><span class="line">    [self.sinaSDK play];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (void)onActionPause:(id)sender &#123;</span><br><span class="line">//    [self.tencentSDK pause];</span><br><span class="line">    [self.sinaSDK play];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (void)onActionStop:(id)sender &#123;</span><br><span class="line">//    [self.tencentSDK stop];</span><br><span class="line">    [self.sinaSDK stop];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (void)onActionResume:(id)sender &#123;</span><br><span class="line">//    [self.tencentSDK resume];</span><br><span class="line">    [self.sinaSDK resume];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>这种方案也可以完成我们更改播放SDK的需求，但是一个播放界面的业务不仅仅是<code>播放</code>、<code>暂停</code>、<code>停止</code>、<code>重置</code>等功能，还会涉及到<code>弹幕</code>、<code>礼物</code>、<code>分享</code>等其他业务，随着业务增多，<code>ViewController</code>的代码也会随之变大，有时候我们在执行<code>暂停</code>时还会有其它操作，这样频繁去更改代码的行为并不友好，也增加了我们的工作量，出错机率也会随之增大。</p><h4 id="方案二"><a href="#方案二" class="headerlink" title="方案二"></a>方案二</h4><p>工作中我们在使用第三方框架时，提倡加一层中间层，这样在替换第三方框架时，可以减少业务代码的更改，只需要中间层替换底层代码，保持上层业务代码不变。</p><p>创建<code>PlayerInter</code>作为播放器的中间层，对之前的方案一进行更改<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">- (instancetype)initWithType:(NSNumber *)type &#123;</span><br><span class="line">    if (self = [super init]) &#123;</span><br><span class="line">        _type = type;</span><br><span class="line">    &#125;</span><br><span class="line">    return self;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (void)interPlay &#123;</span><br><span class="line">    if ([self.type isEqualToNumber:@1]) &#123;</span><br><span class="line">        [self.sinaSDK play];</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        [self.tencentSDK play];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (void)interPause &#123;</span><br><span class="line">    if ([self.type isEqualToNumber:@1]) &#123;</span><br><span class="line">        [self.sinaSDK pause];</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        [self.tencentSDK pause];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (void)interStop &#123;</span><br><span class="line">    if ([self.type isEqualToNumber:@1]) &#123;</span><br><span class="line">        [self.sinaSDK stop];</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        [self.tencentSDK pause];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (void)interResume &#123;</span><br><span class="line">    if ([self.type isEqualToNumber:@1]) &#123;</span><br><span class="line">        [self.sinaSDK resume];</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        [self.tencentSDK resume];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>播放器SDK懒加载，根据<code>PlayerInter</code>初始化传进来的<code>type</code>类型，进行对应的播放器使用。<code>ViewController</code>的代码属于上层业务，当播放更换时，只需要<code>PlayerInter</code>做更改，上层业务不需要更改。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">- (void)viewDidLoad &#123;</span><br><span class="line">    [super viewDidLoad];</span><br><span class="line">    self.playerInter = [[PlayerInter alloc]initWithType:@1];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (void)onActionPlay:(id)sender &#123;</span><br><span class="line">    [self.playerInter interPlay];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (void)onActionPause:(id)sender &#123;</span><br><span class="line">    [self.playerInter interPause];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (void)onActionStop:(id)sender &#123;</span><br><span class="line">    [self.playerInter interStop];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (void)onActionResume:(id)sender &#123;</span><br><span class="line">    [self.playerInter interResume];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>加了中间层，感觉方案上已经尽善尽美，当播放器更换时，只需要修改<code>type</code>类型即可，并且也可以做到后台控制使用哪种播放器。可是作为一个居安思危的程序员，我怎么能在这个时候就红枣枸杞茶喝起来呢？我设想如果再有一种新的播放器的话代码会怎么样。。。</p><ul><li>假设新增优酷播放SDK</li></ul><p><code>PlayerInter</code>代码如下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">- (instancetype)initWithType:(NSNumber *)type &#123;</span><br><span class="line">    if (self = [super init]) &#123;</span><br><span class="line">        _type = type;</span><br><span class="line">    &#125;</span><br><span class="line">    return self;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (void)interPlay &#123;</span><br><span class="line">    if ([self.type isEqualToNumber:@1]) &#123;</span><br><span class="line">        [self.sinaSDK play];</span><br><span class="line">    &#125; else if ([self.type isEqualToNumber:@2]) &#123;</span><br><span class="line">        [self.tencentSDK play];</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        [self.youkuSDK play];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (void)interPause &#123;</span><br><span class="line">    if ([self.type isEqualToNumber:@1]) &#123;</span><br><span class="line">        [self.sinaSDK pause];</span><br><span class="line">    &#125; else if ([self.type isEqualToNumber:@2]) &#123;</span><br><span class="line">        [self.tencentSDK pause];</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        [self.youkuSDK pause];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (void)interStop &#123;</span><br><span class="line">    if ([self.type isEqualToNumber:@1]) &#123;</span><br><span class="line">        [self.sinaSDK stop];</span><br><span class="line">    &#125; else if ([self.type isEqualToNumber:@2]) &#123;</span><br><span class="line">        [self.tencentSDK pause];</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        [self.youkuSDK stop];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (void)interResume &#123;</span><br><span class="line">    if ([self.type isEqualToNumber:@1]) &#123;</span><br><span class="line">        [self.sinaSDK resume];</span><br><span class="line">    &#125; else if ([self.type isEqualToNumber:@2]) &#123;</span><br><span class="line">        [self.tencentSDK resume];</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        [self.youkuSDK stop];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>除了频繁的<code>if</code> <code>else</code>改动之外，<code>ViewController</code>的上层业务代码没有做出任何改变，这种中间层的方案也还是可以解决我刚才设想的问题，可是作为一个有强迫症的程序员，<code>if</code> <code>else</code>过多也觉得会增加错误机率，如果接下来有第四、第五个播放器呢？</p><h4 id="方案三"><a href="#方案三" class="headerlink" title="方案三"></a>方案三</h4><p>播放器功能</p><ul><li>播放</li><li>暂停</li><li>停止</li><li>重置</li></ul><p>每个播放器都不外乎有以上几个功能，那么是否可以通过一种新的方法来改变之前的策略呢？</p><p>创建<code>PlayProtocol</code>协议，协议有<code>play</code>、<code>pause</code>、<code>stop</code>、<code>resume</code>等通用<code>method</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">@protocol PlayProtocol &lt;NSObject&gt;</span><br><span class="line">- (void)play;</span><br><span class="line">- (void)pause;</span><br><span class="line">- (void)stop;</span><br><span class="line">- (void)resume;</span><br></pre></td></tr></table></figure></p><p>创建<code>TencentPlayObject</code>类，遵守<code>PlayProtocol</code>协议，在<code>TencentPlayObject</code>初始化<code>TencentSDK</code>,并实现<code>PlayProtocol</code>协议制定的方法。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">- (instancetype)init &#123;</span><br><span class="line">    if (self = [super init]) &#123;</span><br><span class="line">        //初始化SDK</span><br><span class="line">        _tencentSDK = [[TencentSDK alloc]init];</span><br><span class="line">    &#125;</span><br><span class="line">    return self;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#pragma mark - PlayProtocol</span><br><span class="line">- (void)play &#123;</span><br><span class="line">    [self.tencentSDK play];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (void)pause &#123;</span><br><span class="line">    [self.tencentSDK pause];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (void)stop &#123;</span><br><span class="line">    [self.tencentSDK stop];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (void)resume &#123;</span><br><span class="line">    [self.tencentSDK resume];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>创建<code>SinaPlayObject</code>和<code>YouKuObject</code>，遵守<code>PlayProtocol</code>,初始化相对应的SDK，并实现协议方法，方法同<code>TencentPlayObject</code>一样。</p><p>创建<code>PlayerFactory</code>类，根据<code>type</code>类型，用来生产对应的<code>playObject</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">@implementation PlayerFactory</span><br><span class="line"></span><br><span class="line">- (instancetype)initWithType:(NSNumber *)type &#123;</span><br><span class="line">    if (self = [super init]) &#123;</span><br><span class="line">        _type = type;</span><br><span class="line">    &#125;</span><br><span class="line">    return self;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (id&lt;PlayProtocol&gt;)productionPlayer &#123;</span><br><span class="line">    if ([self.type isEqualToNumber:@1]) &#123;</span><br><span class="line">        return self.tencentPlayer;</span><br><span class="line">    &#125; else if ([self.type isEqualToNumber:@2]) &#123;</span><br><span class="line">        return self.sinaPlayer;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        return self.youkuPlayer;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>接下来对<code>ViewController</code>的代码进行调整<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">@interface ViewController ()</span><br><span class="line">@property (nonatomic , strong) id&lt;PlayProtocol&gt; player;</span><br><span class="line">@end</span><br><span class="line"></span><br><span class="line">@implementation ViewController</span><br><span class="line"></span><br><span class="line">- (void)viewDidLoad &#123;</span><br><span class="line">    [super viewDidLoad];</span><br><span class="line">    PlayerFactory *factory = [[PlayerFactory alloc]initWithType:@2];</span><br><span class="line">    self.player = [factory productionPlayer];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (void)onActionPlay:(id)sender &#123;</span><br><span class="line">    [self.player play];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (void)onActionPause:(id)sender &#123;</span><br><span class="line">    [self.player pause];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (void)onActionStop:(id)sender &#123;</span><br><span class="line">    [self.player stop];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (void)onActionResume:(id)sender &#123;</span><br><span class="line">    [self.player resume];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>相比较之前的中间层方案，协议的方法更直接明了，从<code>PlayerFactory</code>类中可以看出，只有在生产<code>player</code>的时候用到了<code>if</code> <code>else</code>判断，其它只要各自遵守协议即可，代码上更简单流程，出错机率大大降低。<code>ViewController</code>业务层的代码也保持了不变的原则。如果需要删除哪个播放器，只要对应删除<code>SDK</code>和<code>Object</code>类即可，不用像在中间层一样在代码中删除，出错机率也大大降低。</p><p>如果在使用协议方案的同时再加一层中间层会怎样？</p><p>可以把协议比作一套算法，上层业务直接与中间层关联，在中间层可以去替换不同协议，就做到了算法上的改变，这种方案使程序结构更加严谨，替换方案更多，维护更加方便简洁。</p><p>项目 <a href="https://github.com/chenjianlei/StrategyDemo.git" target="_blank" rel="noopener">demo</a><br>我的博客 <a href="https://chenjianlei.github.io/" target="_blank" rel="noopener">摆渡屋</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;需求：最近在视频播放中，遇到了播放器来回切换调试的问题，那么接下来，会介绍一下怎么做才会使代码更加适用于业务且改动较小的方案。&lt;/p&gt;
&lt;h3 id=&quot;场景一&quot;&gt;&lt;a href=&quot;#场景一&quot; class=&quot;headerlink&quot; title=&quot;场景一&quot;&gt;&lt;/a&gt;场景一&lt;/h
      
    
    </summary>
    
      <category term="iOS" scheme="http://yoursite.com/categories/iOS/"/>
    
    
  </entry>
  
  <entry>
    <title>2017</title>
    <link href="http://yoursite.com/2017/12/22/2017/"/>
    <id>http://yoursite.com/2017/12/22/2017/</id>
    <published>2017-12-22T09:29:06.927Z</published>
    <updated>2017-12-31T17:54:41.746Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>不知道从什么时候开始，我们开始喜欢为自己做一年一度的总结，总结自己一年的得与失。</p><p>这是一篇流水账，把过去这一年，通过文笔记录下来。</p><h3 id="工作"><a href="#工作" class="headerlink" title="工作"></a>工作</h3><p>从<code>2016年6月13号</code>入职<code>丝芭</code>，已经有一年半的时光，在这里经历过通宵加班、周末加班、工作日加班等，好的一点是可以调休，工作不忙之时可以申请调休出去旅游一下（好像永远都在忙。。。 (ㄒoㄒ)。。。）。</p><p>调侃了工作，更多的还是收获。收获了同事之间的友谊，团队之间的协作，感觉已经与同事之间建立了无产阶级的革命友谊，是那种可以一起奔着长征去的那种。。。</p><h5 id="收获"><a href="#收获" class="headerlink" title="收获"></a>收获</h5><ul><li>编程技能的提升</li><li>工作效率的提升</li><li>对编程认知的提升</li><li>从小白到入门的转变</li><li>额头发际线的提升</li></ul><h5 id="不足"><a href="#不足" class="headerlink" title="不足"></a>不足</h5><ul><li>计算机基础薄弱</li><li>逻辑理解欠缺，大局观不足</li><li>对深层次技术理解不足</li><li>个人独立学习能力欠缺</li></ul><h5 id="个人工作介绍"><a href="#个人工作介绍" class="headerlink" title="个人工作介绍"></a>个人工作介绍</h5><p>目前主要负责App <code>口袋48</code> IM聊天，由于前同事个人事务离职，现在也接手了 <code>口袋48</code> 直播，产品<code>2018年</code>的方向是<code>短视频</code>，这个也会是我来负责开发。</p><h3 id="健康"><a href="#健康" class="headerlink" title="健康"></a>健康</h3><p>为什么把健康作为一个主题呢？我觉得太有必要了，尤其是我从事的这个行业，身体在不知不觉中就被击垮了。</p><p><code>2017年4月</code>初，很不幸做了一次结石手术。后来因为饮食不规律，胃开始隐隐作痛，去医院做了检查，从此开始了养胃之旅。</p><p>朋友说我做的孽总是要还的，读书时候喝那么多酒，大冬天也要喝冰镇的啤酒，<code>2017年</code>就是我用来还债的一年，平均三个星期去一次医院。</p><p>好在意志坚定，戒掉了醺酒的坏习惯，胃现在也恢复的差不多，同时减少了饮料的饮用，连凉水都很少去饮用，每天都是与白开水为伴。从五月份开始，重新开始了体育锻炼，周末只要天气良好，去附近的大学打打球。公司同事之间也会不间断的组织篮球赛和足球赛，可能最近到了年底，球赛有段时间没音讯了。。。</p><p>希望大家平时在工作之余好好锻炼身体，发现身体不适及早去医院检查，毕竟身体是革命的本钱。</p><h3 id="旅行"><a href="#旅行" class="headerlink" title="旅行"></a>旅行</h3><p><code>2017年</code>开始了户外爬山。并且找到了一套自我发泄的调节方式，开心：户外活动；生气：户外活动；无聊：户外活动；我觉得它会伴随着我以后的生活。</p><p><code>2017年</code>也去了不少地方，但大都停留在上海周围，本来计划元旦跨年的时候去趟香港，可也因为种种原因耽搁了。</p><p>那么在<code>2018年</code>,给自己设定一个目标，<code>6月中旬</code>去一趟<code>西藏</code>,为期<code>10</code>天左右</p><h3 id="生活-amp-情感"><a href="#生活-amp-情感" class="headerlink" title="生活&amp;情感"></a>生活&amp;情感</h3><p>平时工作比较忙，工作日时间之外很少能做点自己喜欢的事情，但时间就像海绵里的水，挤一挤总归是有的。</p><h5 id="读书"><a href="#读书" class="headerlink" title="读书"></a>读书</h5><p>利用上下班乘坐地铁的时间，从四月份到现在，读完了<code>11</code>本电子图书，<code>4</code>本纸质图书，都可以统称文学小说吧，因为一些电视剧大热，我在没看网络视频的情况下读了网剧<code>《春风十里不如你》</code>和<code>《白鹿原》</code>，因为看了一些电视剧读了<code>《平凡的世界》</code>和<code>《金粉世家》</code>，因为一些个人崇拜读了<code>《史蒂夫·乔布斯传》</code>和<code>《颠覆者-周鸿祎自传》</code>，还有因为个人学习读了<code>《人工智能》</code>和<code>《设计模式之禅》</code>。微信读书记录时长<code>102小时38分钟</code>,读书给我感觉就是<code>我爱学习，学习使我快乐</code>。</p><h5 id="爱好"><a href="#爱好" class="headerlink" title="爱好"></a>爱好</h5><p>有时候也会玩一些电子游戏，也经常会在游戏之后反思是不是在浪费时间，但总是以这是一次放松来安慰自己。</p><p>买了一把<code>口琴</code>，想提升一下自己的音乐素养，可是嘴巴磨破了，基本的五线谱还是没能流利吹出来。</p><p>想给自己配一台<code>Windows</code>电脑机箱，工作中接触的都是<code>Mac</code>，有时候碰到<code>Windows</code>电脑感觉无从下手，系统没有好坏，我觉得不管是<code>Mac</code>还是<code>Windows</code>，都值得去学习。</p><p>每次出去游玩，都发誓要买一台相机，可是每次旅行结束之后这个念头就打消了。前段时间换了台手机，发觉手机拍照也不错，只是自己使用方式不对，尤其是<code>iPhone 8P</code>的<code>人像模式</code>，特别赞。</p><h5 id="宠物"><a href="#宠物" class="headerlink" title="宠物"></a>宠物</h5><p>五月初我从外地爬山回到上海，小伙伴带来了一只猫，从此走上了铲屎官的道路。</p><h5 id="感情"><a href="#感情" class="headerlink" title="感情"></a>感情</h5><p>基本处于空白。</p><p>好在父母谅解，没有过多的干涉和催促。</p><p>希望<code>2018</code>能遇到合适的人，希望你喜爱运动，读书，热爱生活。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;不知道从什么时候开始，我们开始喜欢为自己做一年一度的总结，总结自己一年的得与失。&lt;/p&gt;
&lt;p&gt;这是一篇流水账，把过去这一年，通过文笔记录下
      
    
    </summary>
    
      <category term="闲谈" scheme="http://yoursite.com/categories/%E9%97%B2%E8%B0%88/"/>
    
    
  </entry>
  
  <entry>
    <title>博客二进宫</title>
    <link href="http://yoursite.com/2017/12/22/%E5%8D%9A%E5%AE%A2%E4%BA%8C%E8%BF%9B%E5%AE%AB/"/>
    <id>http://yoursite.com/2017/12/22/博客二进宫/</id>
    <published>2017-12-22T09:29:06.927Z</published>
    <updated>2017-12-22T16:35:47.650Z</updated>
    
    <content type="html"><![CDATA[<p>  记得一年前根据网上的资料搭建自己的博客，处于小白的我直到搭建成功，都处于懵逼状态，今天因为电脑格式化，导致博客不能继续下去，所以重新搭建了自己的博客，就叫它博客二进宫吧！！！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;  记得一年前根据网上的资料搭建自己的博客，处于小白的我直到搭建成功，都处于懵逼状态，今天因为电脑格式化，导致博客不能继续下去，所以重新搭建了自己的博客，就叫它博客二进宫吧！！！&lt;/p&gt;

      
    
    </summary>
    
      <category term="闲谈" scheme="http://yoursite.com/categories/%E9%97%B2%E8%B0%88/"/>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2017/12/22/hello-world/"/>
    <id>http://yoursite.com/2017/12/22/hello-world/</id>
    <published>2017-12-22T08:41:46.768Z</published>
    <updated>2017-12-22T08:41:46.768Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
</feed>
